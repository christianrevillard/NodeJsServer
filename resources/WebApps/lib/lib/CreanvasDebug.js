var TEST=true;var DEBUG=true;var CreJs=CreJs||{};window["CreJs"]=CreJs;CreJs.Creanvas=CreJs.Creanvas||{};CreJs["Creanvas"]=CreJs.Creanvas;CreJs.Creanvas.ElementDecorators=CreJs.Creanvas.ElementDecorators||{};CreJs.Creanvas["ElementDecorators"]=CreJs.Creanvas.ElementDecorators;CreJs.Crelog=CreJs.Crelog||{};CreJs["Crelog"]=CreJs.Crelog;CreJs.Creevents=CreJs.Creevents||{};CreJs["Creevents"]=CreJs.Creevents;CreJs.CreHelpers=CreJs.CreHelpers||{};CreJs["CreHelpers"]=CreJs.CreHelpers;var CreJs=CreJs||{};
(function(){var core=CreJs.Core=CreJs.Core||{};core.Vector=function(x,y,z){var vector=this;this.x=x;this.y=y;this.z=z||0;this.draw=function(context,x,y,color){context.lineWidth=5;context.strokeStyle=color;context.beginPath();context.moveTo(x,y);context.lineTo(x+100*vector.x,y+100*vector.y);context.stroke();context.lineWidth=1;context.strokeStyle="#000"};this.getCoordinates=function(unitVectors){return{u:core.scalarProduct(vector,unitVectors.u),v:core.scalarProduct(vector,unitVectors.v),w:core.scalarProduct(vector,
unitVectors.w)}};this.setCoordinates=function(unitVectors,u,v,w){w=w||0;vector.x=u*unitVectors.u.x+v*unitVectors.v.x+w*unitVectors.w.x;vector.y=u*unitVectors.u.y+v*unitVectors.v.y+w*unitVectors.w.y;vector.z=u*unitVectors.u.z+v*unitVectors.v.z+w*unitVectors.w.z}};core.getUnitVectors=function(x1,y1,x2,y2){var dx=x2-x1;var dy=y2-y1;var longueur=Math.sqrt(dx*dx+dy*dy);return{u:new core.Vector(dx/longueur,dy/longueur),v:new core.Vector(-dy/longueur,dx/longueur),w:0}};core.drawUnitVectors=function(context,
x,y,unitVectors,color){context.lineWidth=5;context.strokeStyle=color;context.beginPath();context.moveTo(x,y);context.lineTo(x+100*unitVectors.u.x,y+100*unitVectors.u.y);context.moveTo(x,y);context.lineTo(x+50*unitVectors.v.x,y+50*unitVectors.v.y);context.stroke();context.lineWidth=1;context.strokeStyle="#000"};core.drawCoordinateVector=function(context,x,y,unitVectors,ux,vx,color){context.lineWidth=5;context.strokeStyle=color;context.beginPath();context.moveTo(x,y);context.lineTo(x+100*ux*unitVectors.u.x,
y+100*ux*unitVectors.u.y);context.lineTo(x+100*ux*unitVectors.u.x+100*vx*unitVectors.v.x,y+100*ux*unitVectors.u.y+100*vx*unitVectors.v.y);context.stroke();context.lineWidth=1;context.strokeStyle="#000"};core.scalarProduct=function(v1,v2){return v1.x*v2.x+v1.y*v2.y};core.VectorProduct=function(v1,v2){return new core.Vector(v1.y*v2.z-v1.z*v2.y,v1.z*v2.x-v1.x*v2.z,v1.x*v2.y-v1.y*v2.x)}})();if(TEST){var CreJsTest=CreJsTest||{};(function(){var core=CreJsTest.Core=CreJs.Core||{};core.test_Vector_constructor=function(){var x=1,y=2,z=3;var vector=new CreJs.Core.Vector(x,y,z);if(vector.x!=x)return"FAILED! vector.x: Expected "+x+", was "+vector.x;if(vector.y!=y)return"FAILED! vector.y: Expected "+y+", was "+vector.y;if(vector.z!=z)return"FAILED! vector.z: Expected "+z+", was "+vector.z;return"OK"}})()};var CreJs=CreJs||{};
(function(){CreJs.Creanvas=CreJs.Creanvas||{};CreJs.Creanvas.CollisionSolver=function(controller){var findCollisionPoint=function(element,other){var clientRectElement,clientRectOther,clientRectIntersection,imageAfter,edges;clientRectElement=element.getClientRect();clientRectOther=other.getClientRect();clientRectIntersection={left:Math.max(clientRectElement.left,clientRectOther.left)-1,right:Math.min(clientRectElement.right,clientRectOther.right)+1,top:Math.max(clientRectElement.top,clientRectOther.top)-
1,bottom:Math.min(clientRectElement.bottom,clientRectOther.bottom)+1};clientRectIntersection.width=clientRectIntersection.right-clientRectIntersection.left;clientRectIntersection.height=clientRectIntersection.bottom-clientRectIntersection.top;if(clientRectIntersection.width<=0||clientRectIntersection.height<=0)return;var collisionImage=element.collisionContext.getImageData(0,0,element.width,element.height);element.collisionContext.scale(1/(element.scaleX||1),1/(element.scaleY||1));element.collisionContext.rotate(-(element.angle||
0));element.collisionContext.translate(other.x-element.x,other.y-element.y);element.collisionContext.rotate(other.angle||0);element.collisionContext.scale(other.scaleX||1,other.scaleY||1);element.collisionContext.globalCompositeOperation="destination-out";element.collisionContext.drawImage(other.collidedContext.canvas,0,0,other.width,other.height,-other.dx,-other.dy,other.width,other.height);element.collisionContext.scale(1/(other.scaleX||1),1/(other.scaleY||1));element.collisionContext.rotate(-other.angle||
0);element.collisionContext.translate(-other.x+element.x,-other.y+element.y);element.collisionContext.rotate(element.angle||0);element.collisionContext.scale(element.scaleX||1,element.scaleY||1);imageAfter=element.collisionContext.getImageData(0,0,element.width,element.height);element.collisionContext.globalCompositeOperation="source-over";element.collisionContext.putImageData(collisionImage,0,0);edges=[];element.edges.forEach(function(edgePoint){if(imageAfter.data[edgePoint.y*element.width*4+edgePoint.x*
4+3]<90)edges.push(edgePoint)});if(edges.length<2)return null;var d,dmax=0;var theMax={i:0,j:edges.length-1};for(var i=1;i<edges.length;i++)for(var j=i+1;j<edges.length;j++){var dx=edges[i].x-edges[j].x;var dy=edges[i].y-edges[j].y;d=Math.sqrt(dx*dx+dy*dy);if(d>dmax){dmax=d;theMax.i=i;theMax.j=j}}var point1=element.getCanvasXY(edges[theMax.i].x-element.dx,edges[theMax.i].y-element.dy);var point2=element.getCanvasXY(edges[theMax.j].x-element.dx,edges[theMax.j].y-element.dy);if(point1.x==point2.x&&
point1.y==point2.y)return null;return{x:Math.round((point1.x+point2.x)/2),y:Math.round((point1.y+point2.y)/2),vectors:CreJs.Core.getUnitVectors(point1.x,point1.y,point2.x,point2.y)}};var updateAfterCollision=function(element,other,collisionPoint){var colVectors,speedElement,speedOther,localSpeedElement,localSpeedOther,centerCollisionElement,l1,centerCollisionOther,l2;colVectors=collisionPoint.vectors;centerCollisionElement=new CreJs.Core.Vector(collisionPoint.x-element.x,collisionPoint.y-element.y);
l1=CreJs.Core.VectorProduct(centerCollisionElement,colVectors.v).z;centerCollisionOther=new CreJs.Core.Vector(collisionPoint.x-other.x,collisionPoint.y-other.y);l2=CreJs.Core.VectorProduct(centerCollisionOther,colVectors.v).z;var elementRot=CreJs.Core.VectorProduct(centerCollisionElement,colVectors.v);var otherRot=CreJs.Core.VectorProduct(centerCollisionOther,colVectors.v);speedElement=new CreJs.Core.Vector(element.moving.speed.x,element.moving.speed.y);speedOther=new CreJs.Core.Vector(other.moving.speed.x,
other.moving.speed.y);if(element.scaleSpeed){speedElement.x+=centerCollisionElement.x*element.scaleSpeed.x;speedElement.y+=centerCollisionElement.y*element.scaleSpeed.y}if(other.scaleSpeed){speedOther.x+=centerCollisionOther.x*other.scaleSpeed.x;speedOther.y+=centerCollisionOther.y*other.scaleSpeed.y}localSpeedElement=speedElement.getCoordinates(colVectors);localSpeedOther=speedOther.getCoordinates(colVectors);var F=element.collidable.coefficient*other.collidable.coefficient*2*(localSpeedOther.v-
localSpeedElement.v+other.moving.rotationSpeed*otherRot.z-element.moving.rotationSpeed*elementRot.z)/(1/other.m+1/element.m+otherRot.z*otherRot.z/other.getM()+elementRot.z*elementRot.z/element.getM());element.moving.speed.x+=F/element.m*colVectors.v.x;element.moving.speed.y+=F/element.m*colVectors.v.y;other.moving.speed.x-=F/other.m*colVectors.v.x;other.moving.speed.y-=F/other.m*colVectors.v.y;element.moving.rotationSpeed+=F*l1/element.getM();other.moving.rotationSpeed-=F*l2/other.getM()};var getCollidableElements=
function(){return controller.elements.filter(function(e){return e.collidable})};this.solveCollision=function(element){var toCheck=getCollidableElements();var others,center,collisionPoint,other;center=element.getCenter();others=toCheck.filter(function(other){var otherCenter;if(other.id===element.id||!other.moving.speed.x&&!other.moving.speed.y&&!element.moving.speed.x&&!element.moving.speed.y&&!other.scaleSpeed&&!element.scaleSpeed)return false;otherCenter=other.getCenter();if(Math.sqrt((center.x-
otherCenter.x)*(center.x-otherCenter.x)+(center.y-otherCenter.y)*(center.y-otherCenter.y))>element.getRadius()+other.getRadius())return false;return true});if(others.length==0)return true;collisionPoint=null;others.forEach(function(checkCollisionWith){if(collisionPoint)return;collisionPoint=findCollisionPoint(element,checkCollisionWith);if(collisionPoint)other=checkCollisionWith});if(!collisionPoint)return true;updateAfterCollision(element,other,collisionPoint);element.events.dispatch("collision",
{element:other,collisionPoint:collisionPoint});other.events.dispatch("collision",{element:element,collisionPoint:collisionPoint});return false}}})();var CreJs=CreJs||{};
(function(){CreJs.Creanvas=CreJs.Creanvas||{};CreJs.Creanvas.Controller=function(controllerData){var canvas,needRedraw,refreshTime,controller,time,timeStart,timeScale;controller=this;canvas=controllerData.canvas;timeScale=controllerData.timeScale||1;if(controllerData.realTime){timeStart=Date.now();this.getTime=function(){return(Date.now()-timeStart)*timeScale}}else{time=0;setInterval(function(){time+=10*timeScale},10);this.getTime=function(){return time}}this.log=function(logData){if(controllerData.log)controllerData.log(logData)};this.log("Starting controller");
controller.context=canvas.getContext("2d");needRedraw=true;isDrawing=false;refreshTime=controllerData.refreshTime||50;this.triggerPointedElementEvent=function(eventId,event){var hit=false;controller.elements.filter(function(e){return e.canHandle(eventId)}).sort(function(a,b){return b.z||0-a.z||0}).forEach(function(element){if(hit)return;if(element.hit(event.x,event.y)){element.events.dispatch(eventId,event);hit=true}})};this.triggerElementEventByIdentifier=function(eventId,event){controller.elements.forEach(function(element){if(element.touchIdentifier==
event.touchIdentifier)element.events.dispatch(eventId,event)})};this.registerCanvasPointerEvent=function(controlEventId,customEventId){canvas.addEventListener(controlEventId,function(event){setTimeout(function(){var triggerEvent=function(clientXY,touchIdentifier){controller.log("Canvas event "+controlEventId+" with touchIdentifier "+touchIdentifier);var eventData=controller.getCanvasXYFromClientXY(clientXY);eventData.touchIdentifier=touchIdentifier;controller.triggerPointedElementEvent(customEventId,
eventData)};if(event.changedTouches)for(var i=0;i<event.changedTouches.length;i++)triggerEvent(event.changedTouches[i],event.changedTouches[i].identifier);else triggerEvent(event,-1)})})};this.registerTouchIdentifierEvent=function(controlEventId,customEventId){canvas.addEventListener(controlEventId,function(event){setTimeout(function(){var triggerEvent=function(clientXY,touchIdentifier){controller.log("Canvas event "+controlEventId+" with touchIdentifier "+touchIdentifier);var eventData=controller.getCanvasXYFromClientXY(clientXY);
eventData.touchIdentifier=touchIdentifier;controller.triggerElementEventByIdentifier(customEventId,eventData)};if(event.changedTouches)for(var i=0;i<event.changedTouches.length;i++)triggerEvent(event.changedTouches[i],event.changedTouches[i].identifier);else triggerEvent(event,-1)})})};this.events=new CreJs.Creevents.EventContainer;this.registerCanvasPointerEvent("click","click");this.registerCanvasPointerEvent("mousedown","pointerDown");this.registerCanvasPointerEvent("touchstart","pointerDown");
this.registerTouchIdentifierEvent("mousemove","pointerMove");this.registerTouchIdentifierEvent("touchmove","pointerMove");this.registerTouchIdentifierEvent("mouseup","pointerUp");this.registerTouchIdentifierEvent("touchend","pointerUp");this.stop=function(){controller.events.dispatch("deactivate");controller.elements=[]};this.redraw=function(){needRedraw=true};this.getCanvasXYFromClientXY=function(clientXY){var boundings=canvas.getBoundingClientRect();return{x:Math.round((clientXY.clientX-boundings.left)*
canvas.width/boundings.width),y:Math.round((clientXY.clientY-boundings.top)*canvas.height/boundings.height)}};controller.elements=[];this.addElement=function(elementData){elementData.controller=controller;var element=new CreJs.Creanvas.Element(elementData);controller.elements.push(element);return element};this.addElement({name:"background",width:canvas.width,height:canvas.height,translate:{dx:0,dy:0},draw:controllerData.drawBackground||function(context){context.fillStyle=controllerData.backgroundStyle||
"#FFF";context.fillRect(0,0,this.width,this.height)},z:-Infinity});setInterval(function(){if(needRedraw&&!isDrawing){isDrawing=true;controller.elements.sort(function(a,b){return(a.z||0)-(b.z||0)}).forEach(function(element){controller.context.translate(element.x,element.y);controller.context.rotate(element.angle||0);controller.context.scale(element.scaleX||1,element.scaleY||1);controller.context.drawImage(element.temporaryRenderingContext.canvas,0,0,element.width,element.height,-element.dx,-element.dy,
element.width,element.height);controller.context.scale(1/(element.scaleX||1),1/element.scaleY||1);controller.context.rotate(-(element.angle||0));controller.context.translate(-element.x,-element.y)});isDrawing=false}},refreshTime)}})();var CreJs=CreJs||{};
(function(){var creanvas=CreJs.Creanvas=CreJs.Creanvas||{};creanvas.Element=function(elementData){if(!elementData.hasOwnProperty("controller"))return;if(!elementData.hasOwnProperty("draw"))return;var cachedResults=[];this.controller=elementData.controller;this.x=elementData.x||0;this.y=elementData.y||0;this.z=elementData.z||0;this.id=CreJs.CreHelpers.GetGuid();this.name=elementData.name;this.width=elementData.width;this.height=elementData.height;this.angle=elementData.angle||0;this.scaleX=elementData.scaleX||
1;this.scaleY=elementData.scaleY||1;this.m=1;var draw=elementData.draw;var translate=elementData.translate||{dx:elementData.width/2,dy:elementData.height/2};this.dx=translate.dx;this.dy=translate.dy;if(elementData.image){this.image=elementData.image;var canvas=this.controller.context.canvas;var tempCanvas=canvas.ownerDocument.createElement("canvas");this.temporaryRenderingContext=tempCanvas.getContext("2d");this.temporaryRenderingContext.putImageData(this.image,0,0)}else{var canvas=this.controller.context.canvas;
var tempCanvas=canvas.ownerDocument.createElement("canvas");tempCanvas.width=elementData.width;tempCanvas.height=elementData.height;this.temporaryRenderingContext=tempCanvas.getContext("2d");this.temporaryRenderingContext.beginPath();this.temporaryRenderingContext.translate(this.dx,this.dy);elementData.draw(this.temporaryRenderingContext);this.image=this.temporaryRenderingContext.getImageData(0,0,elementData.width,elementData.height)}this.getM=function(){return element.m/12*(element.width*element.scaleX*
element.width*element.scaleX+element.height*element.scaleY*element.height*element.scaleY)};this.geRadiusCache=function(){return Math.sqrt(element.width*element.width*element.scaleX*element.scaleX+element.height*element.height*element.scaleY*element.scaleY)/2};this.getRadius=function(){var key=element.width+""+element.height+""+element.scaleX+""+element.scaleY;if(cachedResults["getRadius"]&&cachedResults["getRadius"].key==key)return cachedResults["getRadius"].value;var value=element.geRadiusCache();
cachedResults["geRadius"]={key:key,value:value};return value};var element=this;if(elementData.rules){element.rules=[];elementData.rules.forEach(function(rule){var ruleId=element.rules.length;element.rules.push(rule);setInterval(function(){element.rules[ruleId].rule.call(element);element.triggerRedraw()},rule.checkTime)})}this.events=new CreJs.Creevents.EventContainer;this.isPointInPath=function(clientXY){var canvasXY=element.controller.getCanvasXYFromClientXY(clientXY);return element.controller.noDrawContext.isPointInPath(element,
draw,canvasXY)};if(CreJs.Creanvas.elementDecorators)for(var decoratorId=0;decoratorId<creanvas.elementDecorators.length;decoratorId++){var decorator=CreJs.Creanvas.elementDecorators[decoratorId];if(elementData.hasOwnProperty(decorator.type)&&elementData[decorator.type])decorator.applyTo(element,elementData[decorator.type])}this.hit=function(pointerX,pointerY){var imageX=Math.round(pointerX-element.x+element.dx);var imageY=Math.round(pointerY-element.y+element.dy);return imageX>=0&&imageX<=element.width&&
imageY>=0&&imageY<=element.height&&element.image.data[4*imageY*element.width+4*imageX+3]>0};this.clone=function(){elementData.image=element.image;var newElement=element.controller.addElement(elementData);return newElement};this.applyDecorator=function(decorator,decoratorData){decorator.applyTo(element,decoratorData)};this.removeDecorator=function(decoratorType){element.events.removeEventListener({eventGroupType:decoratorType,listenerId:element.id})};this.canHandle=function(eventId){return eventId==
"click"||eventId=="pointerDown"||element.events.hasEvent(eventId)};this.deactivate=function(){element.controller.events.removeEventListener({listenerId:element.id});element.temporaryRenderingContext=null};element.controller.events.addEventListener({eventId:"deactivate",listenerId:element.id,handleEvent:function(e){element.deactivate()}});this.triggerRedraw=function(){element.controller.redraw()};this.getCanvasXY=function(imageX,imageY){return{x:Math.round(element.x+imageX*element.scaleX*Math.cos(element.angle)-
imageY*element.scaleY*Math.sin(element.angle)),y:Math.round(element.y+imageX*element.scaleX*Math.sin(element.angle)+imageY*element.scaleY*Math.cos(element.angle))}};this.getCanvasXYNoRounding=function(imageX,imageY){return{x:element.x+imageX*element.scaleX*Math.cos(element.angle)-imageY*element.scaleY*Math.sin(element.angle),y:element.y+imageX*element.scaleX*Math.sin(element.angle)+imageY*element.scaleY*Math.cos(element.angle)}};this.getElementXY=function(canvasX,canvasY){return{x:Math.round(((canvasX-
element.x)*Math.cos(element.angle)+(canvasY-element.y)*Math.sin(element.angle))/element.scaleX),y:Math.round(((canvasY-element.y)*Math.cos(element.angle)-(canvasX-element.x)*Math.sin(element.angle))/element.scaleY)}};this.getCenter=function(){return element.getCanvasXY(-element.dx+element.width/2,-element.dy+element.height/2)};var corners=[];corners.push({x:-element.dx,y:-element.dy});corners.push({x:-element.dx+element.width,y:-element.dy});corners.push({x:-element.dx+element.width,y:-element.dy+
element.height});corners.push({x:-element.dx,y:-element.dy+element.height});this.getClientCornersCache=function(){return corners.map(function(point){return element.getCanvasXY(point.x,point.y)})};this.getClientCorners=function(){var key=element.x+""+element.y+""+element.angle+""+element.scaleX+""+element.scaleX;if(cachedResults["getClientCorners"]&&cachedResults["getClientCorners"].key==key)return cachedResults["getClientCorners"].value;var value=element.getClientCornersCache();cachedResults["getClientCorners"]=
{key:key,value:value};return value};this.getClientRectCache=function(){var clientCorners=element.getClientCorners();return{top:clientCorners.reduce(function(a,b){return Math.min(a,b.y)},Infinity),bottom:clientCorners.reduce(function(a,b){return Math.max(a,b.y)},-Infinity),left:clientCorners.reduce(function(a,b){return Math.min(a,b.x)},Infinity),right:clientCorners.reduce(function(a,b){return Math.max(a,b.x)},-Infinity)}};this.getClientRect=function(){var key=element.x+""+element.y+""+element.angle+
""+element.scaleX+""+element.scaleX;if(cachedResults["getClientRect"]&&cachedResults["getClientRect"].key==key)return cachedResults["getClientRect"].value;var value=element.getClientRectCache();cachedResults["getClientRect"]={key:key,value:value};return value}}})();var CreJs=CreJs||{};(function(){CreJs.Creanvas=CreJs.Creanvas||{};CreJs.Creanvas.elementDecorators=CreJs.Creanvas.elementDecorators||[];CreJs.Creanvas.elementDecorators.push({type:"clickable",applyTo:function(element,clickData){element.onClick=function(event){clickData.onclick.call(element,event);element.triggerRedraw()};element.events.addEventListener({eventId:"click",handleEvent:element.onClick})}})})();var CreJs=CreJs||{};
(function(){CreJs.Creanvas=CreJs.Creanvas||{};CreJs.Creanvas.elementDecorators=CreJs.Creanvas.elementDecorators||[];CreJs.Creanvas.elementDecorators.push({type:"collidable",applyTo:function(element,collidableData){element.collidable={};element.controller.collisionSolver=element.controller.collisionSolver||new CreJs.Creanvas.CollisionSolver(element.controller);if(collidableData.hasOwnProperty("collisionCoefficient"))element.collidable.coefficient=collidableData.collisionCoefficient;else element.collidable.coefficient=
1;element.moving=element.moving||{speed:new CreJs.Core.Vector(0,0),acceleration:new CreJs.Core.Vector(0,0),rotationSpeed:0};element.events.addEventListener({eventId:"collision",handleEvent:function(collisionEvent){if(collidableData.onCollision)collidableData.onCollision.call(element,collisionEvent)}});element.preMove=this.preMove||[];element.preMove.push(function(){return element.controller.collisionSolver.solveCollision(element)});var canvas=element.controller.context.canvas;var tempCollisionCanvas=
canvas.ownerDocument.createElement("canvas");var tempCollidedCanvas=canvas.ownerDocument.createElement("canvas");tempCollisionCanvas.width=tempCollidedCanvas.width=element.width;tempCollisionCanvas.height=tempCollidedCanvas.height=element.height;element.collidedContext=tempCollidedCanvas.getContext("2d");element.collidedContext.putImageData(element.image,0,0);element.collidedContext.globalCompositeOperation="source-atop";element.collidedContext.fillStyle="#000";element.collidedContext.fillRect(0,
0,element.width,element.height);element.collisionContext=tempCollisionCanvas.getContext("2d");element.collisionContext.globalCompositeOperation="source-over";element.collisionContext.drawImage(element.collidedContext.canvas,0,0);var collisionImageOld=element.collisionContext.getImageData(0,0,element.width,element.height);var collisionImageNew=element.collisionContext.createImageData(element.width,element.height);element.edges=[];for(var imageX=0;imageX<element.width;imageX++)for(var imageY=0;imageY<
element.height;imageY++){if(collisionImageOld.data[imageY*element.width*4+imageX*4+3]<200)continue;var edge=false;for(var i=-1;i<2;i++)for(var j=-1;j<2;j++)if(imageY+i<0||imageX+j<0||imageY+i>element.height-1||imageX+i>element.width-1||collisionImageOld.data[(imageY+i)*element.width*4+(imageX+j)*4+3]<100){edge=true;i=2;j=2}var fillValue=255;element.collisionContext.putImageData(collisionImageNew,0,0);if(edge){element.edges.push({x:imageX,y:imageY});collisionImageNew.data[imageY*element.width*4+imageX*
4]=0;collisionImageNew.data[imageY*element.width*4+imageX*4+1]=0;collisionImageNew.data[imageY*element.width*4+imageX*4+2]=0;collisionImageNew.data[imageY*element.width*4+imageX*4+3]=fillValue}}element.collisionContext.putImageData(collisionImageNew,0,0);element.collisionContext.translate(element.dx,element.dy)}})})();var CreJs=CreJs||{};(function(){CreJs.Creanvas=CreJs.Creanvas||{};CreJs.Creanvas.elementDecorators=CreJs.Creanvas.elementDecorators||[];CreJs.Creanvas.elementDecorators.push({type:"droppable",applyTo:function(element,droppableData){element.isDroppable=true;element.dropZone=droppableData.dropZone;element.controller.log("Now droppable: "+element.id)}})})();var CreJs=CreJs||{};
(function(){CreJs.Creanvas=CreJs.Creanvas||{};CreJs.Creanvas.elementDecorators=CreJs.Creanvas.elementDecorators||[];CreJs.Creanvas.elementDecorators.push({type:"dropzone",applyTo:function(element,dropzoneData){var availableSpots=dropzoneData.availableSpots;var dropX=dropzoneData.dropX;var dropY=dropzoneData.dropY;element.droppedElements=[];var drop=function(e){if(availableSpots<=0)return;element.controller.log("drop event on dropzone "+element.id+", dropped "+e.droppedElement.id);availableSpots--;
e.droppedElement.x=dropX||element.x;e.droppedElement.y=dropY||element.y;e.droppedElement.dropZone=element;element.droppedElements.push(e.droppedElement);e.droppedElement.events.dispatch("dropped",{dropZone:element,droppedElement:e.droppedElement});element.events.dispatch("droppedIn",{dropZone:element,droppedElement:e.droppedElement});element.triggerRedraw()};element.events.addEventListener({eventGroupType:"dropzone",eventId:"drop",handleEvent:drop,listenerId:element.id});element.drag=function(draggedElement){element.controller.log("dragging from dropzone "+
element.id+", dragged "+draggedElement.id);draggedElement.dropZone=null;availableSpots++;element.droppedElements.splice(element.droppedElements.indexOf(draggedElement),1);element.triggerRedraw()}}})})();var CreJs=CreJs||{};
(function(){CreJs.Creanvas=CreJs.Creanvas||{};CreJs.Creanvas.elementDecorators=CreJs.Creanvas.elementDecorators||[];CreJs.Creanvas.elementDecorators.push({type:"duplicable",applyTo:function(element,duplicableData){var isBlocked=duplicableData.isBlocked;var generatorCount=duplicableData.hasOwnProperty("generatorCount")?duplicableData.generatorCount:Infinity;var requiresTouch=false;var makeCopy=function(e){if(e.touchIdentifier>=0)requiresTouch=true;if(requiresTouch&&e.touchIdentifier<0)return;if(isBlocked&&
isBlocked())return;if(generatorCount<=0)return;element.controller.log("pointereDown event on duplicable "+element.id+", count id  "+generatorCount);generatorCount--;var copy=element.clone();copy.name+=" (duplicate)";copy.removeDecorator("duplicable");copy.applyDecorator(CreJs.Creanvas.getElementDecorator("movable"),{isBlocked:duplicableData.isBlocked});copy.startMoving(e);element.triggerRedraw()};element.events.addEventListener({eventGroupType:"duplicable",eventId:"pointerDown",handleEvent:makeCopy,
listenerId:element.id})}})})();var CreJs=CreJs||{};(function(){CreJs.Creanvas=CreJs.Creanvas||{};CreJs.Creanvas.elementDecorators=CreJs.Creanvas.elementDecorators||[];CreJs.Creanvas.getElementDecorator=function(type){var match=CreJs.Creanvas.elementDecorators.filter(function(d){return d.type==type});if(match.length==0)return null;return match[0]}})();var CreJs=CreJs||{};
(function(){CreJs.Creanvas=CreJs.Creanvas||{};CreJs.Creanvas.elementDecorators=CreJs.Creanvas.elementDecorators||[];CreJs.Creanvas.elementDecorators.push({type:"movable",applyTo:function(element,movableData){var isMoving=false;this.touchIdentifier=null;var movingFrom=null;var isBlocked=movableData.isBlocked;element.startMoving=function(e){element.controller.log("Starting moving - identifier: "+e.touchIdentifier);isMoving=true;element.touchIdentifier=e.touchIdentifier;movingFrom={x:e.x,y:e.y};if(element.dropZone){element.dropZone.drag(element);
element.dropZone=null}};element.moveCompleted=function(e){element.controller.log("Completed move - identifier: "+e.touchIdentifier);isMoving=false;movingFrom=null;if(element.isDroppable){element.controller.log("Trigger drop - identifier: "+e.touchIdentifier);element.controller.triggerPointedElementEvent("drop",{x:e.x,y:e.y,droppedElement:element})}};var beginMove=function(e){if(isBlocked&&isBlocked())return;element.startMoving(e)};element.events.addEventListener({eventGroupType:"movable",eventId:"pointerDown",
handleEvent:beginMove,listenerId:element.id});var isMovingLogged=false;var move=function(e){if(!isMoving)return;if(isBlocked&&isBlocked())return;if(!isMovingLogged){isMovingLogged=true;element.controller.log("pointereMove event on movable "+element.id+" ("+element.touchIdentifier+")")}element.x+=e.x-movingFrom.x;element.y+=e.y-movingFrom.y;movingFrom={x:e.x,y:e.y};element.triggerRedraw()};element.events.addEventListener({eventGroupType:"movable",eventId:"pointerMove",handleEvent:move,listenerId:element.id});
var moveend=function(e){if(!isMoving)return;if(isBlocked&&isBlocked())return;element.controller.log("End detected for touch "+element.touchIdentifier);var canvasXY=element.controller.getCanvasXYFromClientXY(e);element.x+=e.x-movingFrom.x;element.y+=e.y-movingFrom.y;element.moveCompleted(e);element.touchIdentifier=null;isMovingLogged=false;element.triggerRedraw()};element.events.addEventListener({eventGroupType:"movable",eventId:"pointerUp",handleEvent:moveend,listenerId:element.id})}})})();var CreJs=CreJs||{};
(function(){CreJs.Creanvas=CreJs.Creanvas||{};CreJs.Creanvas.elementDecorators=CreJs.Creanvas.elementDecorators||[];CreJs.Creanvas.elementDecorators.push({type:"moving",applyTo:function(element,movingData){var lastUpdated,currentTime,dt,rollbackData;element.moving=element.moving||{};element.moving.speed=new CreJs.Core.Vector(movingData.vx||0,movingData.vy||0);element.moving.acceleration=new CreJs.Core.Vector(movingData.ax||0,movingData.ay||0);element.moving.rotationSpeed=movingData.omega||0;lastUpdated=
element.controller.getTime();setInterval(function(){currentTime=element.controller.getTime();dt=currentTime-lastUpdated;if(dt<1)return;lastUpdated=currentTime;element.moving.speed.x+=element.moving.acceleration.x*dt;element.moving.speed.y+=element.moving.acceleration.y*dt;if(element.moving.speed.x==0&&element.moving.speed.y==0&&element.moving.rotationSpeed==0&&(!element.scaleSpeed||element.scaleSpeed.x==0&&element.scaleSpeed.y==0))return;rollbackData={x:element.x,y:element.y,angle:element.angle,scaleX:element.scaleX,
scaleY:element.scaleY};element.x+=element.moving.speed.x*dt;element.y+=element.moving.speed.y*dt;element.angle+=element.moving.rotationSpeed*dt;if(element.scaleSpeed){element.scaleX+=element.scaleSpeed.x*dt;element.scaleY+=element.scaleSpeed.y*dt}var preMoveOk=true;if(element.preMove)element.preMove.forEach(function(preMoveFunction){if(!preMoveOk)return;if(!preMoveFunction.call(element))preMoveOk=false});if(!preMoveOk){element.x=rollbackData.x;element.y=rollbackData.y;element.angle=rollbackData.angle;
element.scaleX=rollbackData.scaleX;element.scaleY=rollbackData.scaleY}else;},20)}})})();var CreJs=CreJs||{};
(function(){var creevents=CreJs.Creevents=CreJs.Creevents||{};var helpers;creevents.Event=function(eventId){this.eventId=eventId;helpers=CreJs.CreHelpers;var eventHandlers=[];var logger=new CreJs.Crelog.Logger;this.dispatch=function(eventData,callback){var myDispatch=helpers.GetGuid();var count=eventHandlers.length;if(eventData&&eventData.eventId!="pointerMove"&&eventData.eventId!="drag"&&eventData.eventId!="drop")logger.log("Dispatching "+count+" "+eventData.eventId+". ("+myDispatch+")");eventHandlers.forEach(function(handler){handler.debugEvent=
eventId;setTimeout(function(){if(eventData&&eventData.eventId!="pointerMove"&&eventData.eventId!="drag"&&eventData.eventId!="drop")logger.log("Actually handling "+eventData.eventId+". ("+myDispatch+")");handler.handleEvent(eventData);count--;if(count==0&&callback)callback()})})};this.addEventListener=function(listenerData){var handlerGuid=helpers.GetGuid();eventHandlers.push({handlerGuid:handlerGuid,handleEvent:listenerData.handleEvent,rank:listenerData.rank,listenerId:listenerData.listenerId,eventGroupType:listenerData.eventGroupType});
eventHandlers=eventHandlers.sort(function(a,b){return(a.rank||Infinity)-(b.rank||Infinity)});return handlerGuid};this.removeEventListener=function(listenerData){eventHandlers=eventHandlers.filter(function(registered){return Boolean(listenerData.handlerGuid)&&registered.handlerGuid!=listenerData.handlerGuid||Boolean(listenerData.listenerId)&&registered.listenerId!=listenerData.listenerId||Boolean(listenerData.eventGroupType)&&registered.eventGroupType!=listenerData.eventGroupType})}}})();var CreJs=CreJs||{};
(function(){var creevents=CreJs.Creevents=CreJs.Creevents||{};creevents.EventContainer=function(){var container=this;var events={};var eventIds=[];this.hasEvent=function(eventId){return events[eventId]!=undefined};var addEvent=function(eventId){eventIds.push(eventId);events[eventId]=new creevents.Event(eventId)};this.addEventListener=function(listenerData){if(!events[listenerData.eventId])addEvent(listenerData.eventId);return events[listenerData.eventId].addEventListener(listenerData)};this.dispatch=
function(eventId,eventData,callback){if(events[eventId]){if(eventData)eventData.eventId=eventId;events[eventId].dispatch(eventData,callback)}};this.removeEventListener=function(listenerData){if(events[listenerData.eventId])events[listenerData.eventId].removeEventListener(listenerData);else eventIds.forEach(function(eventId){events[eventId].removeEventListener(listenerData)})};this.registerControlEvent=function(control,controlEventId,customEventId){if(!events[customEventId])addEvent(customEventId);
control.addEventListener(controlEventId,function(event){event.preventDefault();setTimeout(function(){container.dispatch(customEventId,event)},0)})}}})();var CreJs=CreJs||{};(function(){var helpers=CreJs.CreHelpers=CreJs.CreHelpers||{};helpers.GetGuid=function(){var timeStampPart=Date.now().toString(16);var tail=helpers.repeatString("x",15-timeStampPart.length)+timeStampPart;var template="xxxxxxxx-xxxx-4xxx-y"+tail.slice(0,3)+"-"+tail.slice(3);return template.replace(/[xy]/g,function(c){var r=Math.random()*16|0;var v=c=="x"?r:r&3|8;return v.toString(16)})};helpers.repeatString=function s(s,n){if(n<=0)return"";return s+helpers.repeatString(s,n-1)}})();var CreJs=CreJs||{};(function(){var isLogging=false;var log=CreJs.Crelog=CreJs.Crelog||{};log.Logger=function(){this.log=function(logData){if(!isLogging)return;console.log(logData)}}})();
